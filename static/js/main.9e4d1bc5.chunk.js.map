{"version":3,"sources":["components/header/NavBars.jsx","components/reusables/list.jsx","UserContext.js","utils/constants.js","components/disease-list/DiseaseList.jsx","components/control-modes/ControlModes.jsx","app/routes.js","components/reusables/SimpleCard.js","components/reusables/SettingsCard.js","components/disease/als.disease.js","components/disease/copd.disease.js","components/ventilator-settings/ventilaterService.js","components/ventilator-settings/VentSettings.jsx","app/App.js","index.js"],"names":["HomeIcon","props","SvgIcon","d","NavBar","className","AppBar","position","Toolbar","color","to","Typography","variant","IconButton","edge","aria-label","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","inline","display","PinkRadio","withStyles","pink","checked","Radio","SimpleList","React","useState","selectedValue","setSelectedValue","classes","onChangeHandler","list","List","style","border","boxSizing","boxShadow","map","item","keyIndex","key","ListItem","alignItems","FormControlLabel","value","val","select","control","onChange","e","target","ListItemText","primary","secondary","Fragment","fontSize","undefined","desc","Divider","component","UserContext","createContext","APPLICATION_CONTANTS","COPD","ALS","DiseaseList","console","log","useContext","user","setUser","diseaseList","event","diseaseType","Button","ControlModes","controlMode","PrettoSlider","height","thumb","marginTop","marginLeft","active","valueLabel","left","track","borderRadius","rail","Slider","SimpleCard","changeHandler","Card","CardContent","gutterBottom","metric","symbol","min","max","newVal","toLowerCase","valueLabelDisplay","defaultValue","borderLeft","marginRight","bullet","margin","transform","title","textAlign","valueSelected","fontWeight","fontStyle","pos","marginBottom","SettingsCard","settingName","AlsDisease","settings","vt_criteria","description","lung_complaince","insp_trigger_senstivity","exp_trigger_senstivity","high_fio2","alarms","low_min_vent","high_respiratory_rate","operation","low_respiratory_rate","apnea","ip","weight","op","ibw","dependsOn","vt_calculated","pressure_support","bpm","editingAllowedByUser","epap","COPDDisease","calculateValueFromOperation","outputProp","diseaseConfig","result","oper","operand1","NumberConvert","operand2","JSON","stringify","para","inputParameters","outputParameters","isNaN","variableInfo","split","category","property","Number","VentilatorSettings","setDiseaseConfig","useEffect","handleIpChanges","evt","newValue","onClick","preventDefault","Object","keys","keyName","length","App","basename","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e4d1bc5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\r\nimport { Link, BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"./NavBars.css\";\r\n\r\nfunction HomeIcon(props) {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nexport default function NavBar() {\r\n  return (\r\n    <div className=\"nav-bar-flex\">\r\n      <AppBar position=\"static\" className=\"nav-bar-root\" position=\"static\">\r\n        <Toolbar>\r\n          <HomeIcon color=\"secondary\">\r\n            <Link to=\"/disease-type\">home</Link>\r\n          </HomeIcon>\r\n          <Typography variant=\"h6\" className=\"app-title\">\r\n            V E N T I<span className=\"app-sub-title\"> C A L</span>\r\n          </Typography>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className=\"menu-button-icon\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { pink } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: \"36ch\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n}));\r\n\r\nconst PinkRadio = withStyles({\r\n  root: {\r\n    color: pink[400],\r\n    \"&$checked\": {\r\n      color: pink[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Radio color=\"default\" {...props} />);\r\n\r\nexport default function SimpleList(props) {\r\n  const [selectedValue, setSelectedValue] = React.useState(\"ALS\");\r\n  const classes = useStyles();\r\n  const onChangeHandler = props.onChangeHandler;\r\n  const list = props.list;\r\n  return (\r\n    <List\r\n      className={classes.root}\r\n      style={{\r\n        backgroundColor: \"#253038\",\r\n        border: \"1px solid #313538\",\r\n        boxSizing: \"border-box\",\r\n        boxShadow: \"0px 11px 55px #000000\",\r\n      }}\r\n    >\r\n      {list.map((item, keyIndex) => {\r\n        return (\r\n          <div key={keyIndex}>\r\n            <ListItem\r\n              alignItems=\"flex-start\"\r\n              style={keyIndex % 2 !== 0 ? { background: \"#1D262C\" } : {}}\r\n            >\r\n              <FormControlLabel\r\n                value={item.val}\r\n                select=\"true\"\r\n                checked={false}\r\n                color=\"#F41062\"\r\n                control={\r\n                  <PinkRadio\r\n                    checked={selectedValue === item.val}\r\n                    onChange={(e) => {\r\n                      setSelectedValue(e.target.value);\r\n                      onChangeHandler(e);\r\n                    }}\r\n                  />\r\n                }\r\n                // disableRipple\r\n              />\r\n              <ListItemText\r\n                primary={item.item}\r\n                secondary={\r\n                  <React.Fragment>\r\n                    <span style={{ color: \"white\", fontSize: \"14px\" }}>\r\n                      {item.desc !== undefined ? item.desc : \"\"}\r\n                    </span>\r\n                  </React.Fragment>\r\n                }\r\n              />\r\n            </ListItem>\r\n            <Divider variant=\"inset\" component=\"li\" />\r\n          </div>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nconst UserContext = React.createContext([{}, () => {}]);\r\n\r\nconst UserProvider = (props) => {\r\n  const [state, setState] = useState({\r\n    diseaseType: \"\",\r\n    controlMode: \"\",\r\n  });\r\n  return (\r\n    <UserContext.Provider value={[state, setState]}>\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport { UserContext, UserProvider };\r\n","const APPLICATION_CONTANTS = {\r\n  DISEASE_TYPE: {\r\n    COPD: \"COPD\",\r\n    ALS: \"ALS\",\r\n  },\r\n};\r\n\r\nexport { APPLICATION_CONTANTS };\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport SimpleList from \"../reusables/list\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link, BrowserRouter as Router } from \"react-router-dom\";\r\nimport { UserContext } from \"../../UserContext\";\r\nimport { APPLICATION_CONTANTS } from \"../../utils/constants\";\r\nimport \"./DiseaseList.css\";\r\nexport default function DiseaseList() {\r\n  console.log(\"diseaselist com loaded\");\r\n\r\n  const [user, setUser] = useContext(UserContext);\r\n  const handlDiseaseType = (event) => {\r\n    setUser({\r\n      ...user,\r\n      diseaseType: event.target.value,\r\n    });\r\n  };\r\n\r\n  const diseaseList = [\r\n    {\r\n      item: \"ALS / MND\",\r\n      desc: \"Amyotrophic lateral sclerosis / Motor neurone disease\",\r\n      val: APPLICATION_CONTANTS.DISEASE_TYPE.ALS,\r\n    },\r\n    {\r\n      item: \"COPD\",\r\n      desc: \"Chronic obstructive pulmonary disease\",\r\n      val: APPLICATION_CONTANTS.DISEASE_TYPE.COPD,\r\n    },\r\n    { item: \"Others\", val: \"other\" },\r\n  ];\r\n  return (\r\n    <div className=\"disease-container\">\r\n      <h1 className=\"disease-heading\">DISEASE TYPE</h1>\r\n      <SimpleList list={diseaseList} onChangeHandler={handlDiseaseType} />\r\n      <Button className=\"nav-button\" variant=\"contained\" color=\"secondary\">\r\n        <Link className=\"nav-button-link\" to=\"/control-modes\">\r\n          Next\r\n        </Link>\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport SimpleList from \"../reusables/list\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link, BrowserRouter as Router } from \"react-router-dom\";\r\nimport { UserContext } from \"../../UserContext\";\r\nimport { APPLICATION_CONTANTS } from \"../../utils/constants\";\r\nimport \"./ControlModes.css\";\r\nexport default function ControlModes() {\r\n  const [user, setUser] = useContext(UserContext);\r\n  const handlControlMode = (event) => {\r\n    setUser({\r\n      ...user,\r\n      controlMode: event.target.value,\r\n    });\r\n  };\r\n  const controlModes = [\r\n    { item: \"Volume control\", val: \"volume\" },\r\n    { item: \"Pressure control\", val: \"pressure\" },\r\n    { item: \"Others\", val: \"other\" },\r\n  ];\r\n  return (\r\n    <div className=\"control-mode-container\">\r\n      <h1 className=\"control-mode-heading\">VENTILATOR</h1>\r\n      <h1 className=\"control-mode-sub-heading\">CONTROL MODE</h1>\r\n      <SimpleList list={controlModes} onChangeHandler={handlControlMode} />\r\n      <Button className=\"nav-button-next\" variant=\"contained\" color=\"secondary\">\r\n        <Link className=\"nav-button-link\" to=\"/settings\">\r\n          Next\r\n        </Link>\r\n      </Button>\r\n      <Button className=\"nav-button-back\" variant=\"contained\" color=\"secondary\">\r\n        <Link className=\"nav-button-link\" to=\"/disease-type\">\r\n          Back\r\n        </Link>\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import DiseaseList from \"../components/disease-list/DiseaseList\";\r\nimport ControlModes from \"../components/control-modes/ControlModes\";\r\n\r\nexport const routes = [\r\n  {\r\n    path: \"/\",\r\n    component: DiseaseList,\r\n  },\r\n  {\r\n    path: \"/disease-type\",\r\n    component: DiseaseList,\r\n  },\r\n  {\r\n    path: \"/control-modes\",\r\n    component: ControlModes,\r\n  },\r\n];\r\n\r\nexport default {\r\n  routes,\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport \"./SimpleCard.css\";\r\nlet newValue;\r\n// const useStyles = makeStyles({\r\n//   pos: {\r\n//     marginBottom: 12,\r\n//   },\r\n// });\r\n\r\nconst PrettoSlider = withStyles({\r\n  root: {\r\n    color: \"#f50057\",\r\n    height: 8,\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: \"#fff\",\r\n    border: \"2px solid currentColor\",\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n    \"&:focus, &:hover, &$active\": {\r\n      boxShadow: \"inherit\",\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: \"calc(-50% + 4px)\",\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n})(Slider);\r\n\r\nexport default function SimpleCard(props) {\r\n  // const classes = useStyles();\r\n  // const bull = <span className={classes.bullet}>•</span>;\r\n  const changeHandler = props.changeHandler;\r\n  return (\r\n    <Card className=\"custom-card\">\r\n      <div className=\"custom-card-container\">\r\n        <CardContent>\r\n          <Typography className=\"card-title\" color=\"textSecondary\" gutterBottom>\r\n            {props.metric}\r\n          </Typography>\r\n          <Typography className=\"card-value\">\r\n            175\r\n            <span className=\"card-unit-symbol\">{props.symbol}</span>\r\n          </Typography>\r\n        </CardContent>\r\n        <div className=\"slider-container\">\r\n          <PrettoSlider\r\n            min={props.min}\r\n            max={props.max}\r\n            onChange={(e, newVal) => {\r\n              newValue = newVal;\r\n              changeHandler(e, newVal, props.metric.toLowerCase());\r\n            }}\r\n            valueLabelDisplay=\"auto\"\r\n            aria-label=\"pretto slider\"\r\n            defaultValue={20}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginTop: \"12px\",\r\n    background: \"linear-gradient(#050B12,#010202)\",\r\n    boxShadow: \"0px 10px 57px #07131f\",\r\n    width: \"45%\",\r\n    height: \"162px\",\r\n    borderLeft: \"3px solid #1FBADC\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    color: \"#fff\",\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    color: \"#05A8DC\",\r\n    textAlign: \"left\",\r\n    marginTop: \"-11px\",\r\n  },\r\n  valueSelected: {\r\n    fontSize: 48,\r\n    color: \"#fff\",\r\n    textAlign: \"left\",\r\n    marginTop: \"8px\",\r\n  },\r\n  symbol: { fontSize: \"14px\", fontWeight: \"normal\", fontStyle: \"normal\" },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function SettingsCard(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <div style={{ marginTop: \"5px\" }}>\r\n        <CardContent>\r\n          <Typography\r\n            className={classes.title}\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n          >\r\n            {props.settingName}\r\n          </Typography>\r\n          <Typography className={classes.valueSelected}>\r\n            {props.value}\r\n          </Typography>\r\n          <Typography className={classes.symbol}>{props.metric}</Typography>\r\n        </CardContent>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","const AlsDisease = {\r\n  settings: {\r\n    vt_criteria: {\r\n      value: \"8\",\r\n      description: \"vt\",\r\n      metric: \"ml/kg\"\r\n    },\r\n    lung_complaince: {\r\n      value: \"60\",\r\n      description: \"Lung Compliance Value\",\r\n      metric:\"ml/ cm H2O\"\r\n    },\r\n    insp_trigger_senstivity: {\r\n      value: \"1\",\r\n      description: \"Inpiration Trigger Sensitivity\",\r\n      metric:\"LPM/cmH20\",\r\n      display: true,\r\n    },\r\n    exp_trigger_senstivity: {\r\n      value: \"40\",\r\n      description: \"Expiration Trigger Sensitivity\",\r\n      metric:\"% Peak Flow\",\r\n      display: true,\r\n    },\r\n    high_fio2: {\r\n      value: \"3\",\r\n      description: \"Supplement Oxygen\",\r\n      metric:\"LPM\",\r\n      display: true,\r\n    },\r\n  },\r\n  alarms: {\r\n    low_min_vent: {\r\n      value: \"5\",\r\n      description: \"Low Minute Ventilation Alarm\",\r\n    },\r\n    high_respiratory_rate: {\r\n      operation: [\"op.bpm\", \"+\", \"10\"],\r\n      description: \"High Respiratory Rate Alarm\",\r\n      value: \"<Not_Calculated>\",\r\n    },\r\n    low_respiratory_rate: {\r\n      operation: [\"op.bpm\", \"-\", \"6\"],\r\n      value: \"<Not_Calculated>\",\r\n      description: \"Low Respiratory Rate Alarm\",\r\n    },\r\n    apnea: {\r\n      value: \"20\",\r\n      description: \"Apnea Alarm \",\r\n    },\r\n  },\r\n  ip: {\r\n    height: {\r\n      value: \"165\",\r\n      description: \"height in cm\",\r\n    },\r\n    weight: {\r\n      value: \"65\",\r\n      description: \"weight text in Kg\",\r\n    },\r\n  },\r\n  op: {\r\n    ibw: {\r\n      operation: [\"ip.height\", \"-\", \"100\"],\r\n      description: \"IBW\",\r\n      metric:\"Kg\",\r\n      value: \"<Not_Calculated>\",\r\n      dependsOn: true,\r\n    },\r\n    vt_calculated: {\r\n      operation: [\"settings.vt_criteria\", \"*\", \"op.ibw\"],\r\n      description: \"VT\",\r\n      metric:\"ml\",\r\n      dependsOn: true,\r\n      value: \"<Not_Calculated>\",\r\n    },\r\n    pressure_support: {\r\n      operation: [\"op.vt_calculated\", \"/\", \"settings.lung_complaince\"],\r\n      description: \"Pressure Support\",\r\n      metric:\"cm H2O\",\r\n      dependsOn: true,\r\n      value: \"<Not_Calculated>\",\r\n    },\r\n    bpm: {\r\n      editingAllowedByUser: true,\r\n      description: \"Respiratory Rate\",\r\n      metric:\"BPM\",\r\n      dependsOn: false,\r\n      value: \"15\",\r\n    },\r\n    epap: {\r\n      editingAllowedByUser: true,\r\n      description: \"EPAP\",\r\n      metric:\"cm H20\",\r\n      dependsOn: false,\r\n      value: \"6\",\r\n    },\r\n  },\r\n};\r\n\r\nexport { AlsDisease };\r\n","const COPDDisease = {\r\n  settings: {\r\n    vt_criteria: {\r\n      value: \"6\",\r\n      description: \"vt\",\r\n      metric: \"ml/kg\"\r\n    },\r\n    lung_complaince: {\r\n      value: \"35\",\r\n      description: \"Lung Compliance Value\",\r\n      metric: \"ml/ cm H2O\"\r\n    },\r\n    insp_trigger_senstivity: {\r\n      value: \"2\",\r\n      description: \"Inpiration Trigger Sensitivity\",\r\n      metric: \"LPM/cmH20\",\r\n      display: true,\r\n    },\r\n    exp_trigger_senstivity: {\r\n      value: \"70\",\r\n      description: \"Expiration Trigger Sensitivity\",\r\n      metric: \"% Peak Flow\",\r\n      display: true,\r\n    },\r\n    high_fio2: {\r\n      value: \"1\",\r\n      description: \"Supplement Oxygen\",\r\n      metric: \"LPM\",\r\n      display: true,\r\n    },\r\n  },\r\n  alarms: {\r\n    low_min_vent: {\r\n      value: \"4\",\r\n      description: \"Low Minute Ventilation Alarm\",\r\n    },\r\n    high_respiratory_rate: {\r\n      operation: [\"op.bpm\", \"+\", \"15\"],\r\n      description: \"High Respiratory Rate Alarm\",\r\n      value: \"<Not_Calculated>\",\r\n    },\r\n    low_respiratory_rate: {\r\n      operation: [\"op.bpm\", \"-\", \"6\"],\r\n      value: \"<Not_Calculated>\",\r\n      description: \"Low Respiratory Rate Alarm\",\r\n    },\r\n    apnea: {\r\n      value: \"15\",\r\n      description: \"Apnea Alarm \",\r\n    },\r\n  },\r\n  ip: {\r\n    height: {\r\n      value: \"165\",\r\n      description: \"height in cm\",\r\n    },\r\n    weight: {\r\n      value: \"65\",\r\n      description: \"weight text in Kg\",\r\n    },\r\n  },\r\n  op: {\r\n    ibw: {\r\n      operation: [\"ip.height\", \"-\", \"100\"],\r\n      description: \"IBW calculation\",\r\n      metric: \"Kg\",\r\n      dependsOn: true,\r\n      value: \"<Not_Calculated>\",\r\n    },\r\n    vt_calculated: {\r\n      operation: [\"settings.vt_criteria\", \"*\", \"op.ibw\"],\r\n      description: \"VT\",\r\n      metric:\"ml\",\r\n      dependsOn: true,\r\n      value: \"<Not_Calculated>\",\r\n    },\r\n    pressure_support: {\r\n      operation: [\"op.vt_calculated\", \"/\", \"settings.lung_complaince\"],\r\n      description: \"Pressure Support\",\r\n      metric:\"cm H2O\",\r\n      dependsOn: true,\r\n      value: \"<Not_Calculated>\",\r\n    },\r\n    bpm: {\r\n      editingAllowedByUser: true,\r\n      description: \"Respiratory Rate\",\r\n      metric:\"BPM\",\r\n      dependsOn: false,\r\n      value: \"16\",\r\n    },\r\n    epap: {\r\n      editingAllowedByUser: true,\r\n      description: \"EPAP\",\r\n      metric:\"cm H20\",\r\n      dependsOn: false,\r\n      value: \"6\",\r\n    },\r\n  },\r\n};\r\n\r\nexport { COPDDisease };\r\n","const calculateValueFromOperation = (outputProp, diseaseConfig) => {\r\n  let result = null;\r\n  let oper = outputProp[\"operation\"];\r\n  const operand1 = NumberConvert(oper[0], diseaseConfig);\r\n  const operand2 = NumberConvert(oper[2], diseaseConfig);\r\n\r\n  console.log(\r\n    \"operation found - \" +\r\n      JSON.stringify(oper) +\r\n      \" opr1 \" +\r\n      operand1 +\r\n      \" opr2 \" +\r\n      operand2\r\n  );\r\n  switch (oper[1]) {\r\n    case \"*\":\r\n      result = operand1 * operand2;\r\n      break;\r\n    case \"/\":\r\n      result = operand1 / operand2;\r\n      break;\r\n    case \"+\":\r\n      result = operand1 + operand2;\r\n      break;\r\n    case \"-\":\r\n      result = operand1 - operand2;\r\n      break;\r\n    default:\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst NumberConvert = (para, diseaseConfig) => {\r\n  const inputParameters = diseaseConfig.ip;\r\n  const outputParameters = diseaseConfig.op;\r\n  const settings = diseaseConfig.settings;\r\n  let result = null;\r\n  if (!isNaN(para)) {\r\n    result = Number(para);\r\n  } else {\r\n    const variableInfo = para.split(\".\");\r\n    const category = variableInfo[0];\r\n    const property = variableInfo[1];\r\n    switch (category) {\r\n      case \"settings\":\r\n        //settings encountered\r\n        if (settings[property]) {\r\n          result = Number(settings[property].value);\r\n        }\r\n        break;\r\n      case \"ip\":\r\n        //input parameter\r\n        result = Number(inputParameters[property].value);\r\n        break;\r\n      case \"op\":\r\n        // output parameter\r\n        if (outputParameters[property].dependsOn) {\r\n          outputParameters[property].value = calculateValueFromOperation(\r\n            outputParameters[property],\r\n            diseaseConfig\r\n          );\r\n        } else {\r\n          outputParameters[property].value = Number(\r\n            outputParameters[property].value\r\n          );\r\n        }\r\n        result = outputParameters[property].value;\r\n        break;\r\n      default:\r\n        console.log(\"unindentified parameter type \");\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nexport { calculateValueFromOperation };\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport SimpleCard from \"../reusables/SimpleCard\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SettingsCard from \"../reusables/SettingsCard\";\r\nimport { UserContext } from \"../../UserContext\";\r\nimport { AlsDisease } from \"../disease/als.disease\";\r\nimport { COPDDisease } from \"../disease/copd.disease\";\r\nimport { APPLICATION_CONTANTS } from \"../../utils/constants\";\r\nimport { calculateValueFromOperation } from \"./ventilaterService\";\r\nimport \"./VentSettings.css\";\r\nexport default function VentilatorSettings() {\r\n  const [user, setUser] = useContext(UserContext);\r\n  const [diseaseConfig, setDiseaseConfig] = useState(null);\r\n  useEffect(() => {\r\n    if (user.diseaseType === APPLICATION_CONTANTS.DISEASE_TYPE.ALS) {\r\n      console.log(\"Load Disease Config of \" + user.diseaseType);\r\n\r\n      setDiseaseConfig(AlsDisease);\r\n    } else if (user.diseaseType === APPLICATION_CONTANTS.DISEASE_TYPE.COPD) {\r\n      console.log(\"Load Disease Config of \" + user.diseaseType);\r\n      setDiseaseConfig(COPDDisease);\r\n    } else {\r\n      console.log(\"Loading Default Config  \");\r\n      // let ss = COPDDisease.op.o1.operation;\r\n      // console.log(\" ss \" + ss);\r\n\r\n      setDiseaseConfig(AlsDisease);\r\n    }\r\n  }, [user.diseaseType]);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    Object.keys(diseaseConfig.op).map((keyName, keyIndex) => {\r\n      if (\r\n        diseaseConfig.op[keyName].operation &&\r\n        diseaseConfig.op[keyName].operation.length === 3\r\n      ) {\r\n        diseaseConfig.op[keyName].value = calculateValueFromOperation(\r\n          diseaseConfig.op[keyName],\r\n          diseaseConfig\r\n        );\r\n      }\r\n    });\r\n    Object.keys(diseaseConfig.alarms).map((keyName, keyIndex) => {\r\n      if (\r\n        diseaseConfig.alarms[keyName].operation &&\r\n        diseaseConfig.alarms[keyName].operation.length === 3\r\n      ) {\r\n        console.log(\r\n          keyName + \" alarm oper \" + diseaseConfig.alarms[keyName].operation\r\n        );\r\n\r\n        diseaseConfig.alarms[keyName].value = calculateValueFromOperation(\r\n          diseaseConfig.alarms[keyName],\r\n          diseaseConfig\r\n        );\r\n      }\r\n    });\r\n    setDiseaseConfig({ ...diseaseConfig, diseaseConfig });\r\n  };\r\n  const handleChange = (event) => {\r\n    // console.log(\"someting changed \" + event.target.value);\r\n  };\r\n\r\n  const handleIpChanges = (evt, newValue, key) => {\r\n    diseaseConfig.ip[key].value = newValue;\r\n  };\r\n\r\n  return (\r\n    <div className=\"vent-container\">\r\n      <div className=\"input-settings-container\">\r\n        <SimpleCard\r\n          metric=\"HEIGHT\"\r\n          symbol=\"cm\"\r\n          min={175}\r\n          max={375}\r\n          changeHandler={handleIpChanges}\r\n        />\r\n        <SimpleCard\r\n          metric=\"WEIGHT\"\r\n          symbol=\"kg\"\r\n          min={10}\r\n          max={300}\r\n          changeHandler={handleIpChanges}\r\n        />\r\n      </div>\r\n      <Button className=\"reset-button\" variant=\"contained\" color=\"secondary\">\r\n        Reset\r\n      </Button>\r\n      <Button\r\n        onClick={handleSubmit}\r\n        className=\"submit-button\"\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n      >\r\n        Calculate\r\n      </Button>\r\n      <div className=\"setting-container\">\r\n        <div className=\"settings-heading\">\r\n          <span style={{ marginLeft: \"9px\" }}>Settings</span>\r\n        </div>\r\n        <div className=\"settings-section\">\r\n          {diseaseConfig && diseaseConfig.op ? (\r\n            Object.keys(diseaseConfig.op).map((keyName, keyIndex) => {\r\n              const outputProp = diseaseConfig.op[keyName];\r\n              return (\r\n                <SettingsCard\r\n                  key={keyIndex}\r\n                  settingName={outputProp.description}\r\n                  metric={outputProp.metric}\r\n                  value={outputProp.value}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </div>\r\n        <div className=\"additional-settings-heading\">\r\n          <span style={{ marginLeft: \"9px\" }}>Additional settings</span>\r\n        </div>\r\n        <div className=\"additional-settings-section\">\r\n          {diseaseConfig && diseaseConfig.settings ? (\r\n            Object.keys(diseaseConfig.settings).map((keyName, keyIndex) => {\r\n              const outputProp = diseaseConfig.settings[keyName];\r\n              if (outputProp.display) {\r\n                return (\r\n                  <SettingsCard\r\n                    key={keyIndex}\r\n                    settingName={outputProp.description}\r\n                    metric={outputProp.metric}\r\n                    value={outputProp.value}\r\n                  />\r\n                );\r\n              }\r\n            })\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport NavBar from \"../components/header/NavBars\";\r\nimport { routes } from \"./routes\";\r\nimport DiseaseList from \"../components/disease-list/DiseaseList\";\r\nimport ControlModes from \"../components/control-modes/ControlModes\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport VentilatorSettings from \"../components/ventilator-settings/VentSettings\";\r\n\r\nfunction App() {\r\n  console.log(\"APP loaded\");\r\n\r\n  return (\r\n    <div>\r\n      <NavBar></NavBar>\r\n      <HashRouter basename=\"/\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <DiseaseList />\r\n          </Route>\r\n          <Route exact path=\"/disease-type\">\r\n            <DiseaseList />\r\n          </Route>\r\n          <Route exact path=\"/control-modes\">\r\n            <ControlModes />\r\n          </Route>\r\n          <Route exact path=\"/settings\">\r\n            <VentilatorSettings />\r\n          </Route>\r\n        </Switch>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./app/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}